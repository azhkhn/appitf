#! /usr/bin/env python3
"""appitfd.

    Application interface daemon for system interaction.

    This interface provides a HTTP service to allow an
    Adobe AIR or HTML5 digital signage application to
    interact with the local operating system.

Usage:
    appitfd [options]

Options:
    --host=<host>, -H   Specifies the host to listen on [default: 127.0.0.1].
    --port=<port>, -p   Specifies the port to listen on [default: 5000].
    --help, -h          Shows this page.
"""
from sys import stderr, exit as exit_

from docopt import docopt
from flask import jsonify, Flask

from backlight import backlight


APPLICATION = Flask('AppItf')


@APPLICATION.route('/backlight/<int:percent>', methods=['POST'])
def set_backlight(percent):
    """Sets the backlight brightness."""

    if not 0 <= percent <= 100:
        print('Got invalid percentage:', percent, file=stderr, flush=True)
        return (f'Got invalid percentage: {percent}.', 400)

    percent, method = backlight(percent)
    return jsonify({'percent': percent, 'method': method})


def main(options):
    """Runs the daemon."""

    host = options['--host']
    port = options['--port']

    try:
        port = int(port)
    except ValueError:
        print(f'Port number must be an integer, not "{port}".', file=stderr,
              flush=True)
        return 1

    APPLICATION.run(host=host, port=port)
    return 0


if __name__ == '__main__':
    exit_(main(docopt(__doc__)))
